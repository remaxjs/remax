<template name="REMAX_TPL">
    <block tt:for="{{root.children}}" tt:key="*this">
        <template is="REMAX_TPL_1_CONTAINER" data="{{i: root.nodes[item], a: ''}}" />
    </block>
</template>

<sjs module="_h">
    var elements = {};
    module.exports = {
    v: function(value) {
    return value !== undefined ? value : '';
    },
    tid: function (type, ancestor) {
    var items = ancestor.split(',');
    var depth = 1;

    for (var i = 0; i < items.length; i++) {
    if (type === items[i]) {
    depth = depth + 1;
    }
    }

    var id = 'REMAX_TPL_' + depth + '_' + type;
    return id;
    }
    };
</sjs>

<template name="REMAX_TPL_1_button">
    <button
        animation="{{_h.v(i.props['animation'])}}"
    app-parameter="{{_h.v(i.props['app-parameter'])}}"
    bindcontact="{{_h.v(i.props['bindcontact'])}}"
    binderror="{{_h.v(i.props['binderror'])}}"
    bindgetphonenumber="{{_h.v(i.props['bindgetphonenumber'])}}"
    bindgetuserinfo="{{_h.v(i.props['bindgetuserinfo'])}}"
    bindlaunchapp="{{_h.v(i.props['bindlaunchapp'])}}"
    bindopensetting="{{_h.v(i.props['bindopensetting'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    form-type="{{_h.v(i.props['form-type'])}}"
    hover-class="{{_h.v(i.props['hover-class'])}}"
    hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
    hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
    hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
    id="{{_h.v(i.props['id'])}}"
    lang="{{_h.v(i.props['lang'])}}"
    loading="{{_h.v(i.props['loading'])}}"
    open-type="{{_h.v(i.props['open-type'])}}"
    plain="{{_h.v(i.props['plain'])}}"
    send-message-img="{{_h.v(i.props['send-message-img'])}}"
    send-message-path="{{_h.v(i.props['send-message-path'])}}"
    send-message-title="{{_h.v(i.props['send-message-title'])}}"
    session-from="{{_h.v(i.props['session-from'])}}"
    show-message-card="{{_h.v(i.props['show-message-card'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</button>
</template>

<template name="REMAX_TPL_1_canvas">
    <canvas
        animation="{{_h.v(i.props['animation'])}}"
    binderror="{{_h.v(i.props['binderror'])}}"
    bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
    bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
    bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
    bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
    bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
    canvas-id="{{_h.v(i.props['canvas-id'])}}"
    class="{{_h.v(i.props['class'])}}"
    disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</canvas>
</template>

<template name="REMAX_TPL_1_checkbox">
    <checkbox
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</checkbox>
</template>

<template name="REMAX_TPL_1_checkbox-group">
    <checkbox-group
        bindchange="{{_h.v(i.props['bindchange'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</checkbox-group>
</template>

<template name="REMAX_TPL_1_form">
    <form
        animation="{{_h.v(i.props['animation'])}}"
    bindreset="{{_h.v(i.props['bindreset'])}}"
    bindsubmit="{{_h.v(i.props['bindsubmit'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    report-submit="{{_h.v(i.props['report-submit'])}}"
    report-submit-timeout="{{_h.v(i.props['report-submit-timeout'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</form>
</template>

<template name="REMAX_TPL_2_form">
    <form
        animation="{{_h.v(i.props['animation'])}}"
    bindreset="{{_h.v(i.props['bindreset'])}}"
    bindsubmit="{{_h.v(i.props['bindsubmit'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    report-submit="{{_h.v(i.props['report-submit'])}}"
    report-submit-timeout="{{_h.v(i.props['report-submit-timeout'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</form>
</template>

<template name="REMAX_TPL_3_form">
    <form
        animation="{{_h.v(i.props['animation'])}}"
    bindreset="{{_h.v(i.props['bindreset'])}}"
    bindsubmit="{{_h.v(i.props['bindsubmit'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    report-submit="{{_h.v(i.props['report-submit'])}}"
    report-submit-timeout="{{_h.v(i.props['report-submit-timeout'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</form>
</template>

<template name="REMAX_TPL_4_form">
    <form
        animation="{{_h.v(i.props['animation'])}}"
    bindreset="{{_h.v(i.props['bindreset'])}}"
    bindsubmit="{{_h.v(i.props['bindsubmit'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    report-submit="{{_h.v(i.props['report-submit'])}}"
    report-submit-timeout="{{_h.v(i.props['report-submit-timeout'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</form>
</template>

<template name="REMAX_TPL_5_form">
    <form
        animation="{{_h.v(i.props['animation'])}}"
    bindreset="{{_h.v(i.props['bindreset'])}}"
    bindsubmit="{{_h.v(i.props['bindsubmit'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    report-submit="{{_h.v(i.props['report-submit'])}}"
    report-submit-timeout="{{_h.v(i.props['report-submit-timeout'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</form>
</template>

<template name="REMAX_TPL_1_icon">
    <icon
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    id="{{_h.v(i.props['id'])}}"
    size="{{_h.v(i.props['size'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</icon>
</template>

<template name="REMAX_TPL_2_icon">
    <icon
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    id="{{_h.v(i.props['id'])}}"
    size="{{_h.v(i.props['size'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</icon>
</template>

<template name="REMAX_TPL_1_image">
    <image
        animation="{{_h.v(i.props['animation'])}}"
    binderror="{{_h.v(i.props['binderror'])}}"
    bindload="{{_h.v(i.props['bindload'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
    bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
    bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
    bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    lazy-load="{{_h.v(i.props['lazy-load'])}}"
    mode="{{_h.v(i.props['mode'])}}"
    show-menu-by-longpress="{{_h.v(i.props['show-menu-by-longpress'])}}"
    src="{{_h.v(i.props['src'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</image>
</template>

<template name="REMAX_TPL_1_input">
    <input
        adjust-position="{{_h.v(i.props['adjust-position'])}}"
    animation="{{_h.v(i.props['animation'])}}"
    auto-focus="{{_h.v(i.props['auto-focus'])}}"
    bindblur="{{_h.v(i.props['bindblur'])}}"
    bindconfirm="{{_h.v(i.props['bindconfirm'])}}"
    bindfocus="{{_h.v(i.props['bindfocus'])}}"
    bindinput="{{_h.v(i.props['bindinput'])}}"
    bindkeyboardheightchange="{{_h.v(i.props['bindkeyboardheightchange'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    confirm-hold="{{_h.v(i.props['confirm-hold'])}}"
    confirm-type="{{_h.v(i.props['confirm-type'])}}"
    cursor="{{_h.v(i.props['cursor'])}}"
    cursor-spacing="{{_h.v(i.props['cursor-spacing'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    focus="{{_h.v(i.props['focus'])}}"
    maxlength="{{_h.v(i.props['maxlength'])}}"
    name="{{_h.v(i.props['name'])}}"
    password="{{_h.v(i.props['password'])}}"
    placeholder="{{_h.v(i.props['placeholder'])}}"
    placeholder-class="{{_h.v(i.props['placeholder-class'])}}"
    placeholder-style="{{_h.v(i.props['placeholder-style'])}}"
    selection-end="{{_h.v(i.props['selection-end'])}}"
    selection-start="{{_h.v(i.props['selection-start'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</input>
</template>

<template name="REMAX_TPL_1_label">
    <label
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    for="{{_h.v(i.props['for'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</label>
</template>

<template name="REMAX_TPL_2_label">
    <label
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    for="{{_h.v(i.props['for'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</label>
</template>

<template name="REMAX_TPL_3_label">
    <label
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    for="{{_h.v(i.props['for'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</label>
</template>

<template name="REMAX_TPL_4_label">
    <label
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    for="{{_h.v(i.props['for'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</label>
</template>

<template name="REMAX_TPL_5_label">
    <label
        animation="{{_h.v(i.props['animation'])}}"
    class="{{_h.v(i.props['class'])}}"
    for="{{_h.v(i.props['for'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</label>
</template>

<template name="REMAX_TPL_1_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_2_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_3_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_4_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_5_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_6_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_7_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_8_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_9_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_10_movable-area">
    <movable-area
        class="{{_h.v(i.props['class'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    style="{{_h.v(i.props['style'])}}"
    width="{{_h.v(i.props['width'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-area>
</template>

<template name="REMAX_TPL_1_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_2_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_3_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_4_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_5_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_6_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_7_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_8_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_9_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_10_movable-view">
    <movable-view
        bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchangeend="{{_h.v(i.props['bindchangeend'])}}"
    bindscale="{{_h.v(i.props['bindscale'])}}"
    class="{{_h.v(i.props['class'])}}"
    damping="{{_h.v(i.props['damping'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    friction="{{_h.v(i.props['friction'])}}"
    height="{{_h.v(i.props['height'])}}"
    id="{{_h.v(i.props['id'])}}"
    out-of-bounds="{{_h.v(i.props['out-of-bounds'])}}"
    scale="{{_h.v(i.props['scale'])}}"
    scale-max="{{_h.v(i.props['scale-max'])}}"
    scale-min="{{_h.v(i.props['scale-min'])}}"
    scale-value="{{_h.v(i.props['scale-value'])}}"
    style="{{_h.v(i.props['style'])}}"
    touchcancel="{{_h.v(i.props['touchcancel'])}}"
    touchend="{{_h.v(i.props['touchend'])}}"
    touchmove="{{_h.v(i.props['touchmove'])}}"
    touchstart="{{_h.v(i.props['touchstart'])}}"
    width="{{_h.v(i.props['width'])}}"
    x="{{_h.v(i.props['x'])}}"
    y="{{_h.v(i.props['y'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</movable-view>
</template>

<template name="REMAX_TPL_1_navigator">
    <navigator
        animation="{{_h.v(i.props['animation'])}}"
    app-id="{{_h.v(i.props['app-id'])}}"
    bindcomplete="{{_h.v(i.props['bindcomplete'])}}"
    bindfail="{{_h.v(i.props['bindfail'])}}"
    bindsuccess="{{_h.v(i.props['bindsuccess'])}}"
    class="{{_h.v(i.props['class'])}}"
    delta="{{_h.v(i.props['delta'])}}"
    extra-data="{{_h.v(i.props['extra-data'])}}"
    hover-class="{{_h.v(i.props['hover-class'])}}"
    hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
    hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
    hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
    id="{{_h.v(i.props['id'])}}"
    open-type="{{_h.v(i.props['open-type'])}}"
    path="{{_h.v(i.props['path'])}}"
    style="{{_h.v(i.props['style'])}}"
    target="{{_h.v(i.props['target'])}}"
    url="{{_h.v(i.props['url'])}}"
    version="{{_h.v(i.props['version'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</navigator>
</template>

<template name="REMAX_TPL_1_picker">
    <picker
        animation="{{_h.v(i.props['animation'])}}"
    bindcancel="{{_h.v(i.props['bindcancel'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    bindcolumnchange="{{_h.v(i.props['bindcolumnchange'])}}"
    class="{{_h.v(i.props['class'])}}"
    custom-item="{{_h.v(i.props['custom-item'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    end="{{_h.v(i.props['end'])}}"
    fields="{{_h.v(i.props['fields'])}}"
    id="{{_h.v(i.props['id'])}}"
    mode="{{_h.v(i.props['mode'])}}"
    name="{{_h.v(i.props['name'])}}"
    range="{{_h.v(i.props['range'])}}"
    range-key="{{_h.v(i.props['range-key'])}}"
    start="{{_h.v(i.props['start'])}}"
    style="{{_h.v(i.props['style'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</picker>
</template>

<template name="REMAX_TPL_1_picker-view">
    <picker-view
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    bindpickend="{{_h.v(i.props['bindpickend'])}}"
    bindpickstart="{{_h.v(i.props['bindpickstart'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    indicator-class="{{_h.v(i.props['indicator-class'])}}"
    indicator-style="{{_h.v(i.props['indicator-style'])}}"
    mask-class="{{_h.v(i.props['mask-class'])}}"
    mask-style="{{_h.v(i.props['mask-style'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</picker-view>
</template>

<template name="REMAX_TPL_1_picker-view-column">
    <picker-view-column
    
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</picker-view-column>
</template>

<template name="REMAX_TPL_1_progress">
    <progress
        active="{{_h.v(i.props['active'])}}"
    active-mode="{{_h.v(i.props['active-mode'])}}"
    activeColor="{{_h.v(i.props['activeColor'])}}"
    animation="{{_h.v(i.props['animation'])}}"
    backgroundColor="{{_h.v(i.props['backgroundColor'])}}"
    bindactiveend="{{_h.v(i.props['bindactiveend'])}}"
    border-radius="{{_h.v(i.props['border-radius'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    font-size="{{_h.v(i.props['font-size'])}}"
    id="{{_h.v(i.props['id'])}}"
    percent="{{_h.v(i.props['percent'])}}"
    show-info="{{_h.v(i.props['show-info'])}}"
    stroke-width="{{_h.v(i.props['stroke-width'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</progress>
</template>

<template name="REMAX_TPL_1_radio">
    <radio
        animation="{{_h.v(i.props['animation'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</radio>
</template>

<template name="REMAX_TPL_1_radio-group">
    <radio-group
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</radio-group>
</template>

<template name="REMAX_TPL_1_rich-text">
    <rich-text
        animation="{{_h.v(i.props['animation'])}}"
    bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
    bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
    bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
    bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
    class="{{_h.v(i.props['class'])}}"
    id="{{_h.v(i.props['id'])}}"
    nodes="{{_h.v(i.props['nodes'])}}"
    space="{{_h.v(i.props['space'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</rich-text>
</template>

<template name="REMAX_TPL_1_scroll-view">
    <scroll-view
        animation="{{_h.v(i.props['animation'])}}"
    bindscroll="{{_h.v(i.props['bindscroll'])}}"
    bindscrolltolower="{{_h.v(i.props['bindscrolltolower'])}}"
    bindscrolltoupper="{{_h.v(i.props['bindscrolltoupper'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    enable-back-to-top="{{_h.v(i.props['enable-back-to-top'])}}"
    enable-flex="{{_h.v(i.props['enable-flex'])}}"
    id="{{_h.v(i.props['id'])}}"
    lower-threshold="{{_h.v(i.props['lower-threshold'])}}"
    scroll-into-view="{{_h.v(i.props['scroll-into-view'])}}"
    scroll-left="{{_h.v(i.props['scroll-left'])}}"
    scroll-top="{{_h.v(i.props['scroll-top'])}}"
    scroll-with-animation="{{_h.v(i.props['scroll-with-animation'])}}"
    scroll-x="{{_h.v(i.props['scroll-x'])}}"
    scroll-y="{{_h.v(i.props['scroll-y'])}}"
    style="{{_h.v(i.props['style'])}}"
    upper-threshold="{{_h.v(i.props['upper-threshold'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</scroll-view>
</template>

<template name="REMAX_TPL_2_scroll-view">
    <scroll-view
        animation="{{_h.v(i.props['animation'])}}"
    bindscroll="{{_h.v(i.props['bindscroll'])}}"
    bindscrolltolower="{{_h.v(i.props['bindscrolltolower'])}}"
    bindscrolltoupper="{{_h.v(i.props['bindscrolltoupper'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    enable-back-to-top="{{_h.v(i.props['enable-back-to-top'])}}"
    enable-flex="{{_h.v(i.props['enable-flex'])}}"
    id="{{_h.v(i.props['id'])}}"
    lower-threshold="{{_h.v(i.props['lower-threshold'])}}"
    scroll-into-view="{{_h.v(i.props['scroll-into-view'])}}"
    scroll-left="{{_h.v(i.props['scroll-left'])}}"
    scroll-top="{{_h.v(i.props['scroll-top'])}}"
    scroll-with-animation="{{_h.v(i.props['scroll-with-animation'])}}"
    scroll-x="{{_h.v(i.props['scroll-x'])}}"
    scroll-y="{{_h.v(i.props['scroll-y'])}}"
    style="{{_h.v(i.props['style'])}}"
    upper-threshold="{{_h.v(i.props['upper-threshold'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</scroll-view>
</template>

<template name="REMAX_TPL_3_scroll-view">
    <scroll-view
        animation="{{_h.v(i.props['animation'])}}"
    bindscroll="{{_h.v(i.props['bindscroll'])}}"
    bindscrolltolower="{{_h.v(i.props['bindscrolltolower'])}}"
    bindscrolltoupper="{{_h.v(i.props['bindscrolltoupper'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    enable-back-to-top="{{_h.v(i.props['enable-back-to-top'])}}"
    enable-flex="{{_h.v(i.props['enable-flex'])}}"
    id="{{_h.v(i.props['id'])}}"
    lower-threshold="{{_h.v(i.props['lower-threshold'])}}"
    scroll-into-view="{{_h.v(i.props['scroll-into-view'])}}"
    scroll-left="{{_h.v(i.props['scroll-left'])}}"
    scroll-top="{{_h.v(i.props['scroll-top'])}}"
    scroll-with-animation="{{_h.v(i.props['scroll-with-animation'])}}"
    scroll-x="{{_h.v(i.props['scroll-x'])}}"
    scroll-y="{{_h.v(i.props['scroll-y'])}}"
    style="{{_h.v(i.props['style'])}}"
    upper-threshold="{{_h.v(i.props['upper-threshold'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</scroll-view>
</template>

<template name="REMAX_TPL_4_scroll-view">
    <scroll-view
        animation="{{_h.v(i.props['animation'])}}"
    bindscroll="{{_h.v(i.props['bindscroll'])}}"
    bindscrolltolower="{{_h.v(i.props['bindscrolltolower'])}}"
    bindscrolltoupper="{{_h.v(i.props['bindscrolltoupper'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    enable-back-to-top="{{_h.v(i.props['enable-back-to-top'])}}"
    enable-flex="{{_h.v(i.props['enable-flex'])}}"
    id="{{_h.v(i.props['id'])}}"
    lower-threshold="{{_h.v(i.props['lower-threshold'])}}"
    scroll-into-view="{{_h.v(i.props['scroll-into-view'])}}"
    scroll-left="{{_h.v(i.props['scroll-left'])}}"
    scroll-top="{{_h.v(i.props['scroll-top'])}}"
    scroll-with-animation="{{_h.v(i.props['scroll-with-animation'])}}"
    scroll-x="{{_h.v(i.props['scroll-x'])}}"
    scroll-y="{{_h.v(i.props['scroll-y'])}}"
    style="{{_h.v(i.props['style'])}}"
    upper-threshold="{{_h.v(i.props['upper-threshold'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</scroll-view>
</template>

<template name="REMAX_TPL_5_scroll-view">
    <scroll-view
        animation="{{_h.v(i.props['animation'])}}"
    bindscroll="{{_h.v(i.props['bindscroll'])}}"
    bindscrolltolower="{{_h.v(i.props['bindscrolltolower'])}}"
    bindscrolltoupper="{{_h.v(i.props['bindscrolltoupper'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    enable-back-to-top="{{_h.v(i.props['enable-back-to-top'])}}"
    enable-flex="{{_h.v(i.props['enable-flex'])}}"
    id="{{_h.v(i.props['id'])}}"
    lower-threshold="{{_h.v(i.props['lower-threshold'])}}"
    scroll-into-view="{{_h.v(i.props['scroll-into-view'])}}"
    scroll-left="{{_h.v(i.props['scroll-left'])}}"
    scroll-top="{{_h.v(i.props['scroll-top'])}}"
    scroll-with-animation="{{_h.v(i.props['scroll-with-animation'])}}"
    scroll-x="{{_h.v(i.props['scroll-x'])}}"
    scroll-y="{{_h.v(i.props['scroll-y'])}}"
    style="{{_h.v(i.props['style'])}}"
    upper-threshold="{{_h.v(i.props['upper-threshold'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</scroll-view>
</template>

<template name="REMAX_TPL_1_slider">
    <slider
        activeColor="{{_h.v(i.props['activeColor'])}}"
    animation="{{_h.v(i.props['animation'])}}"
    backgroundColor="{{_h.v(i.props['backgroundColor'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    bindchanging="{{_h.v(i.props['bindchanging'])}}"
    block-color="{{_h.v(i.props['block-color'])}}"
    block-size="{{_h.v(i.props['block-size'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    max="{{_h.v(i.props['max'])}}"
    min="{{_h.v(i.props['min'])}}"
    name="{{_h.v(i.props['name'])}}"
    selected-color="{{_h.v(i.props['selected-color'])}}"
    show-value="{{_h.v(i.props['show-value'])}}"
    step="{{_h.v(i.props['step'])}}"
    style="{{_h.v(i.props['style'])}}"
    track-size="{{_h.v(i.props['track-size'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</slider>
</template>

<template name="REMAX_TPL_1_swiper">
    <swiper
        animation="{{_h.v(i.props['animation'])}}"
    autoplay="{{_h.v(i.props['autoplay'])}}"
    bindanimationfinish="{{_h.v(i.props['bindanimationfinish'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    bindtransition="{{_h.v(i.props['bindtransition'])}}"
    circular="{{_h.v(i.props['circular'])}}"
    class="{{_h.v(i.props['class'])}}"
    current="{{_h.v(i.props['current'])}}"
    display-multiple-items="{{_h.v(i.props['display-multiple-items'])}}"
    duration="{{_h.v(i.props['duration'])}}"
    easing-function="{{_h.v(i.props['easing-function'])}}"
    id="{{_h.v(i.props['id'])}}"
    indicator-active-color="{{_h.v(i.props['indicator-active-color'])}}"
    indicator-color="{{_h.v(i.props['indicator-color'])}}"
    indicator-dots="{{_h.v(i.props['indicator-dots'])}}"
    interval="{{_h.v(i.props['interval'])}}"
    next-margin="{{_h.v(i.props['next-margin'])}}"
    previous-margin="{{_h.v(i.props['previous-margin'])}}"
    skip-hidden-item-layout="{{_h.v(i.props['skip-hidden-item-layout'])}}"
    style="{{_h.v(i.props['style'])}}"
    vertical="{{_h.v(i.props['vertical'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <swiper-item class="{{i.nodes[item].props.class}}" item-id="{{i.nodes[item].props.itemId}}" key="{{i.nodes[item].props.key}}">
    <block tt:for="{{i.nodes[item].children}}" tt:key="*this" tt:for-item="sItem">
      <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item].nodes[sItem], a: a, tid: tid + 1 }}" />
    </block>
  </swiper-item>
</block>
</swiper>
</template>

<template name="REMAX_TPL_1_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_2_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_3_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_4_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_5_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_6_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_7_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_8_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_9_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_10_switch">
    <switch
        animation="{{_h.v(i.props['animation'])}}"
    bindchange="{{_h.v(i.props['bindchange'])}}"
    checked="{{_h.v(i.props['checked'])}}"
    class="{{_h.v(i.props['class'])}}"
    color="{{_h.v(i.props['color'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    id="{{_h.v(i.props['id'])}}"
    name="{{_h.v(i.props['name'])}}"
    style="{{_h.v(i.props['style'])}}"
    type="{{_h.v(i.props['type'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</switch>
</template>

<template name="REMAX_TPL_1_text">
    <text
        animation="{{_h.v(i.props['animation'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    decode="{{_h.v(i.props['decode'])}}"
    id="{{_h.v(i.props['id'])}}"
    selectable="{{_h.v(i.props['selectable'])}}"
    space="{{_h.v(i.props['space'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</text>
</template>

<template name="REMAX_TPL_2_text">
    <text
        animation="{{_h.v(i.props['animation'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    decode="{{_h.v(i.props['decode'])}}"
    id="{{_h.v(i.props['id'])}}"
    selectable="{{_h.v(i.props['selectable'])}}"
    space="{{_h.v(i.props['space'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</text>
</template>

<template name="REMAX_TPL_3_text">
    <text
        animation="{{_h.v(i.props['animation'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    decode="{{_h.v(i.props['decode'])}}"
    id="{{_h.v(i.props['id'])}}"
    selectable="{{_h.v(i.props['selectable'])}}"
    space="{{_h.v(i.props['space'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</text>
</template>

<template name="REMAX_TPL_4_text">
    <text
        animation="{{_h.v(i.props['animation'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    decode="{{_h.v(i.props['decode'])}}"
    id="{{_h.v(i.props['id'])}}"
    selectable="{{_h.v(i.props['selectable'])}}"
    space="{{_h.v(i.props['space'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</text>
</template>

<template name="REMAX_TPL_5_text">
    <text
        animation="{{_h.v(i.props['animation'])}}"
    bindtap="{{_h.v(i.props['bindtap'])}}"
    class="{{_h.v(i.props['class'])}}"
    decode="{{_h.v(i.props['decode'])}}"
    id="{{_h.v(i.props['id'])}}"
    selectable="{{_h.v(i.props['selectable'])}}"
    space="{{_h.v(i.props['space'])}}"
    style="{{_h.v(i.props['style'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</text>
</template>

<template name="REMAX_TPL_1_textarea">
    <textarea
        adjust-position="{{_h.v(i.props['adjust-position'])}}"
    animation="{{_h.v(i.props['animation'])}}"
    auto-focus="{{_h.v(i.props['auto-focus'])}}"
    auto-height="{{_h.v(i.props['auto-height'])}}"
    bindblur="{{_h.v(i.props['bindblur'])}}"
    bindconfirm="{{_h.v(i.props['bindconfirm'])}}"
    bindfocus="{{_h.v(i.props['bindfocus'])}}"
    bindinput="{{_h.v(i.props['bindinput'])}}"
    bindkeyboardheightchange="{{_h.v(i.props['bindkeyboardheightchange'])}}"
    bindlinechange="{{_h.v(i.props['bindlinechange'])}}"
    class="{{_h.v(i.props['class'])}}"
    controlled="{{_h.v(i.props['controlled'])}}"
    cursor="{{_h.v(i.props['cursor'])}}"
    cursor-spacing="{{_h.v(i.props['cursor-spacing'])}}"
    disabled="{{_h.v(i.props['disabled'])}}"
    fixed="{{_h.v(i.props['fixed'])}}"
    focus="{{_h.v(i.props['focus'])}}"
    id="{{_h.v(i.props['id'])}}"
    maxlength="{{_h.v(i.props['maxlength'])}}"
    name="{{_h.v(i.props['name'])}}"
    placeholder="{{_h.v(i.props['placeholder'])}}"
    placeholder-class="{{_h.v(i.props['placeholder-class'])}}"
    placeholder-style="{{_h.v(i.props['placeholder-style'])}}"
    selection-end="{{_h.v(i.props['selection-end'])}}"
    selection-start="{{_h.v(i.props['selection-start'])}}"
    show-confirm-bar="{{_h.v(i.props['show-confirm-bar'])}}"
    show-count="{{_h.v(i.props['show-count'])}}"
    style="{{_h.v(i.props['style'])}}"
    value="{{_h.v(i.props['value'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</textarea>
</template>

<template name="REMAX_TPL_1_video">
    <video
        animation="{{_h.v(i.props['animation'])}}"
    auto-pause-if-navigate="{{_h.v(i.props['auto-pause-if-navigate'])}}"
    auto-pause-if-open-native="{{_h.v(i.props['auto-pause-if-open-native'])}}"
    autoplay="{{_h.v(i.props['autoplay'])}}"
    bindended="{{_h.v(i.props['bindended'])}}"
    binderror="{{_h.v(i.props['binderror'])}}"
    bindfullscreenchange="{{_h.v(i.props['bindfullscreenchange'])}}"
    bindpause="{{_h.v(i.props['bindpause'])}}"
    bindplay="{{_h.v(i.props['bindplay'])}}"
    bindprogress="{{_h.v(i.props['bindprogress'])}}"
    bindtimeupdate="{{_h.v(i.props['bindtimeupdate'])}}"
    bindwaiting="{{_h.v(i.props['bindwaiting'])}}"
    class="{{_h.v(i.props['class'])}}"
    controls="{{_h.v(i.props['controls'])}}"
    danmu-btn="{{_h.v(i.props['danmu-btn'])}}"
    danmu-list="{{_h.v(i.props['danmu-list'])}}"
    direction="{{_h.v(i.props['direction'])}}"
    duration="{{_h.v(i.props['duration'])}}"
    enable-danmu="{{_h.v(i.props['enable-danmu'])}}"
    enable-play-gesture="{{_h.v(i.props['enable-play-gesture'])}}"
    enable-progress-gesture="{{_h.v(i.props['enable-progress-gesture'])}}"
    id="{{_h.v(i.props['id'])}}"
    initial-time="{{_h.v(i.props['initial-time'])}}"
    loop="{{_h.v(i.props['loop'])}}"
    muted="{{_h.v(i.props['muted'])}}"
    object-fit="{{_h.v(i.props['object-fit'])}}"
    page-gesture="{{_h.v(i.props['page-gesture'])}}"
    play-btn-position="{{_h.v(i.props['play-btn-position'])}}"
    poster="{{_h.v(i.props['poster'])}}"
    show-center-play-btn="{{_h.v(i.props['show-center-play-btn'])}}"
    show-fullscreen-btn="{{_h.v(i.props['show-fullscreen-btn'])}}"
    show-mute-btn="{{_h.v(i.props['show-mute-btn'])}}"
    show-play-btn="{{_h.v(i.props['show-play-btn'])}}"
    show-progress="{{_h.v(i.props['show-progress'])}}"
    src="{{_h.v(i.props['src'])}}"
    style="{{_h.v(i.props['style'])}}"
    title="{{_h.v(i.props['title'])}}"
    vslide-gesture="{{_h.v(i.props['vslide-gesture'])}}"
    vslide-gesture-in-fullscreen="{{_h.v(i.props['vslide-gesture-in-fullscreen'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</video>
</template>

<template name="REMAX_TPL_1_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_2_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_3_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_4_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_5_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_6_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_7_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_8_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_9_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_10_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_11_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_12_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_13_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_14_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_15_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_16_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_17_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_18_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_19_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_20_view">
        <block tt:if="{{i.props['catchtouchmove']}}">
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>

    <block tt:else>
        <view
              animation="{{_h.v(i.props['animation'])}}"
      bindanimationend="{{_h.v(i.props['bindanimationend'])}}"
      bindanimationiteration="{{_h.v(i.props['bindanimationiteration'])}}"
      bindanimationstart="{{_h.v(i.props['bindanimationstart'])}}"
      bindlongtap="{{_h.v(i.props['bindlongtap'])}}"
      bindtap="{{_h.v(i.props['bindtap'])}}"
      bindtouchcancel="{{_h.v(i.props['bindtouchcancel'])}}"
      bindtouchend="{{_h.v(i.props['bindtouchend'])}}"
      bindtouchmove="{{_h.v(i.props['bindtouchmove'])}}"
      bindtouchstart="{{_h.v(i.props['bindtouchstart'])}}"
      bindtransitionend="{{_h.v(i.props['bindtransitionend'])}}"
      class="{{_h.v(i.props['class'])}}"
      disable-scroll="{{_h.v(i.props['disable-scroll'])}}"
      hidden="{{_h.v(i.props['hidden'])}}"
      hover-class="{{_h.v(i.props['hover-class'])}}"
      hover-start-time="{{_h.v(i.props['hover-start-time'])}}"
      hover-stay-time="{{_h.v(i.props['hover-stay-time'])}}"
      hover-stop-propagation="{{_h.v(i.props['hover-stop-propagation'])}}"
      id="{{_h.v(i.props['id'])}}"
      style="{{_h.v(i.props['style'])}}"
        >
        <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
    </view>
    </block>
</template>

<template name="REMAX_TPL_1_web-view">
    <web-view
        binderror="{{_h.v(i.props['binderror'])}}"
    bindload="{{_h.v(i.props['bindload'])}}"
    bindmessage="{{_h.v(i.props['bindmessage'])}}"
    src="{{_h.v(i.props['src'])}}"
    >
    <block tt:for="{{i.children}}" tt:key="*this">
  <template is="{{'REMAX_TPL_' + (tid + 1) + '_CONTAINER'}}" data="{{i: i.nodes[item], a: a, tid: tid + 1 }}" />
</block>
</web-view>
</template>

<template name="REMAX_TPL_1_plain-text" data="{{i: i}}">
    <block>{{i.text}}</block>
</template>

<template name="REMAX_TPL_1_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 1}}" />
</template>
<template name="REMAX_TPL_2_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 2}}" />
</template>
<template name="REMAX_TPL_3_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 3}}" />
</template>
<template name="REMAX_TPL_4_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 4}}" />
</template>
<template name="REMAX_TPL_5_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 5}}" />
</template>
<template name="REMAX_TPL_6_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 6}}" />
</template>
<template name="REMAX_TPL_7_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 7}}" />
</template>
<template name="REMAX_TPL_8_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 8}}" />
</template>
<template name="REMAX_TPL_9_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 9}}" />
</template>
<template name="REMAX_TPL_10_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 10}}" />
</template>
<template name="REMAX_TPL_11_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 11}}" />
</template>
<template name="REMAX_TPL_12_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 12}}" />
</template>
<template name="REMAX_TPL_13_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 13}}" />
</template>
<template name="REMAX_TPL_14_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 14}}" />
</template>
<template name="REMAX_TPL_15_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 15}}" />
</template>
<template name="REMAX_TPL_16_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 16}}" />
</template>
<template name="REMAX_TPL_17_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 17}}" />
</template>
<template name="REMAX_TPL_18_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 18}}" />
</template>
<template name="REMAX_TPL_19_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 19}}" />
</template>
<template name="REMAX_TPL_20_CONTAINER" data="{{i: i}}">
    <template is="{{_h.tid(i.type, a)}}" data="{{i: i, a: a + ',' + i.type, tid: 20}}" />
</template>
